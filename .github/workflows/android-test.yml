permissions:
  contents: read
  actions: write
name: Android CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TMDB_API_TOKEN: ${{ secrets.TMDB_API_TOKEN }}
    
    steps:
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        ls /dev/kvm
    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest
    
    - name: Build APK
      run: ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Start Android Emulator and run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 35
        arch: x86_64
        disable-animations: true
        disk-size: 6000M
        heap-size: 600M
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        script: ./gradlew connectedAndroidTest
    
  notify:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    env:
      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Notify Teams on Success
        if: needs.build.result == 'success'
        uses: carriquiry-g/ms-teams-notification@v2
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          notification-summary: "✅ Success"
          notification-style: good

      - name: Send Teams Notification
        run: |
          JOB_STATUS="${{ needs.build.result }}"

          if [[ "$JOB_STATUS" == "success" ]]; then
            STATUS_ICON="✅"
            STATUS_TEXT="Success"
            STATUS_COLOR="Good"
          else
            STATUS_ICON="❌"
            STATUS_TEXT="Failed"
            STATUS_COLOR="Attention"
          fi
          
          ACTOR_NAME="${{ github.actor }}"
          WORKFLOW_NAME="${{ github.workflow }}"
          REPO_NAME="${{ github.repository }}"
          RUN_ID="${{ github.run_id }}"
          SERVER_URL="${{ github.server_url }}"

          JSON_PAYLOAD=$(cat .github/ms-teams-payload.json | \
            sed "s|__WORKFLOW_STATUS_ICON__|${STATUS_ICON}|g" | \
            sed "s|__WORKFLOW_NAME__|${WORKFLOW_NAME}|g" | \
            sed "s|__ACTOR_AVATAR_URL__|https://github.com/${ACTOR_NAME}.png|g" | \
            sed "s|__ACTOR_NAME__|${ACTOR_NAME}|g" | \
            sed "s|__JOB_STATUS__|${STATUS_ICON} ${STATUS_TEXT}|g" | \
            sed "s|__STATUS_COLOR__|${STATUS_COLOR}|g" | \
            sed "s|__WORKFLOW_RUN_URL__|${SERVER_URL}/${REPO_NAME}/actions/runs/${RUN_ID}|g")

          curl -X POST "${{ secrets.TEAMS_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            --data-binary "${JSON_PAYLOAD}"
        env:
          # 將 secrets 傳入環境變數，讓 curl 可以使用
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
      
      - name: Notify Teams on Failure
        if: needs.build.result == 'failure'
        uses: carriquiry-g/ms-teams-notification@v2
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          notification-summary: "✅ Success"
          notification-style: danger
          verbose-logging: true
